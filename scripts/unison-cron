#!/bin/bash
#exec 1>/dev/null;
#set -xv

# Vars
TMPDIR=/var/tmp
HOST=$1
CONFIG=$2
EMAIL=$3
FLAGFILE=${CONFIG}-${LOGNAME}
FLAG=${TMPDIR}/${FLAGFILE}

# Functions
check_unison_process()
{
if ps -ef | grep $LOGNAME | grep "unison $CONFIG" | grep -vE "grep|ssh|bash" &>/dev/null;
then
  return 1
else
  return 0
fi
} # check_unison

check_unison_logfile()
{

if ! tail -n 5 ~/unison*.log | grep "Synchronization complete" >/dev/null;
then
 cat << EOF | mailx -s "$HOSTNAME:~$LOGNAME | $CONFIG | Synchronization is late!" $EMAIL
`tail -n 5 ~/unison*.log`
EOF
fi

if ! find ~/  -maxdepth 1 -name "unison*.log" -mtime +3;
then
 cat << EOF | mailx -s "$HOSTNAME:~$LOGNAME | $CONFIG | Logfile is too old!" $EMAIL
`tail -n 5 ~/unison*.log`
EOF
fi

return 0
}

check_network()
{
# If there is no answer default gateways dns port, stopp here!
nc -z `ip r | grep default | cut -d ' ' -f 3` 53 &>/dev/null || return 1

if ! unison -testServer $CONFIG &>/dev/null;
then
  return 1
fi

Hops=`tracepath6 $HOST | wc -l`

if [ "$Hops" -gt "11" ];
then
  # Do not start if to many hops to the server. We assume we are not in local
  # wlan.
  return 1
fi

return 0
} # check_network

start_unison()
{

cat << EOF | mailx -s "$HOSTNAME:~$LOGNAME/.unison/$CONFIG started, YEAH!!" $EMAIL
`tail -n 2 ~/unison*.log`
EOF

unison $CONFIG -batch -auto -repeat 300 -silent &

if [ -f $FLAG ];
then
  rm $FLAG
fi
} # start_unison

# Main

if [ -z $HOST ] || [ -z $CONFIG ] || [ -z $EMAIL ];
then
  echo "Usage: ./unison-cron server sync-to-server.prf email@domain.tld"
  exit 3
fi

check_unison_logfile && check_unison_process && check_network && start_unison
